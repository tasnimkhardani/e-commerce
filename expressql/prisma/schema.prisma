generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id           Int       @id @default(autoincrement())
  nom          String    @unique
  prenom       String    @unique
  email        String    @unique
  motdepass    String    // Typo corrected from `0String` to `String`
  telephone    Int?      @unique
  isEnable     Boolean   @default(true) // Defaulting to true unless specified otherwise
  role         Role      @default(CANDIDAT) // Default role set to CANDIDAT


  sujetsPFE    SujetPFE[]
  commentaires Commentaire[]
  taches       Tache[]
  candidatures Candidature[]
  avancements  Avancement[]
}

enum Role {
  CANDIDAT
  ENCADRANT
  ADMIN
}

model SujetPFE {
  id          Int       @id @default(autoincrement())
  titre       String
  description String?

  // Relationships
  utilisateur Utilisateur? @relation(fields: [userId], references: [id])
  userId      Int?
}

model Commentaire {
  id          Int       @id @default(autoincrement())
  date        DateTime  @default(now())
  contenu     String

  // Relationships
  utilisateur Utilisateur? @relation(fields: [userId], references: [id])
  userId      Int?
}

model Tache {
  id            Int       @id @default(autoincrement())
  name          String
  description   String?
  deadline      String
  valideTache   Boolean?

  // Relationships
  utilisateur   Utilisateur? @relation(fields: [userId], references: [id])
  userId        Int?
}

model Candidature {
  id                 Int       @id @default(autoincrement())
  lettreMotivation   String
  statut             String
  cv                 String

  // Relationships
  utilisateur        Utilisateur? @relation(fields: [userId], references: [id])
  userId             Int?
}

model Avancement {
  id          Int       @id @default(autoincrement())
  valideStage Boolean

  // Relationships
  utilisateur Utilisateur? @relation(fields: [userId], references: [id])
  userId      Int?
}
